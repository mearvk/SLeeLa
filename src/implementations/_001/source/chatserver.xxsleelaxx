instrument sleela.instruments.network.
instrument sleela.instruments.ui.
instrument sleela.instrument.app.
instrument sleela.instrument.system.
instrument sleela.instruments.extensions.

::nordshrift:{$}

$ language in/out java

//

$ submodule     system      @bodi               setting("strict")       ref("{auto}")       ver 1.0+        note("")
$ submodule     system      @connector          setting("strict")       ref("{auto}")       ver 1.0+        note("")
$ submodule     system      @crypto             setting("strict")       ref("{auto}")       ver 1.0+        note("")
$ submodule     system      @factory            setting("strict")       ref("{auto}")       ver 1.0+        note("")
$ submodule     system      @frame              setting("strict")       ref("{auto}")       ver 1.0+        note("")
$ submodule     system      @http               setting("strict")       ref("{auto}")       ver 1.0+        note("")
$ submodule     system      @monitors           setting("strict")       ref("{auto}")       ver 1.0+        note("")
$ submodule     system      @servers            setting("strict")       ref("{auto}")       ver 1.0+        note("")

//

$ submodules    settings    @compiler           setting("strict")       ref("{auto}")
$ submodules    settings    @viewers            setting("strict")       ref("{auto}")
$ submodules    settings    @integrator         setting("strict")       ref("{auto}")
$ submodules    settings    @signatures         setting("strict")       ref("{auto}")
$ submodules    settings    @naming             setting("implied")      ref("{auto}")
$ submodules    settings    @namespaces         setting("implied")      ref("{auto}")

//

$ module        load        @chatserver         ref("http://nordshrift.examples.chatserver/events/onload")     namespace("nordshrift.examples.chatserver")

//

@chatserver     settings    @submodules         ref("{auto}")
@chatserver     settings    @encryption         ref("{auto}")
@chatserver     settings    @signatures         ref("{auto}")
@chatserver     settings    @settings           ref("{auto}")
@chatserver     settings    @system             ref("{auto}")
@chatserver     settings    @security           ref("{auto}")
@chatserver     settings    @bodi               ref("{auto}")

//

@chatserver     monitor     @instantiation      ref("{auto}")
@chatserver     monitor     @name               ref("{auto}")
@chatserver     monitor     @structure          ref("{auto}")
@chatserver     monitor     @function           ref("{auto}")
@chatserver     monitor     @startup            ref("{auto}")
@chatserver     monitor     @runtime            ref("{auto}")
@chatserver     monitor     @shutdown           ref("{auto}")

//

@chatserver     monitor     @instantiation      submodule @degree @additive @transitive @extensible
@chatserver     monitor     @startup            submodule @degree @additive @transitive @extensible
@chatserver     monitor     @runtime            submodule @degree @additive @transitive @extensible
@chatserver     monitor     @shutdown           submodule @degree @additive @transitive @extensible

//

@chatserver     loader      @network            ref("bodi://network/{auto}/chatserver")
@chatserver     loader      @ui                 ref("bodi://network/{auto}/ui")
@chatserver     loader      @app                ref("bodi://network/{auto}/app")
@chatserver     loader      @system             ref("bodi://network/{auto}/system")

//

@chatserver @network name("network")
: version 1.00
: package netx
: socket name("socket") in/out 88
    : facet display yes
    : facet in
    : facet out

//

@chatserver @datastream name("log")
: version 1.00
: package logx
: writer name("log")
    : facet     outfile("log.txt", synchronous)
    : facet     database("log", 3306)
    : facet     bodi("{auto}", 8888)

//

@chatserver @datastream name("status")
: version 1.00
: package logx
: writer name("status")
    : facet     names ""
    : facet     outfile("status.txt", synchronous)
    : facet     database("status", 3306)
    : facet     bodi("{auto}", 8888)

//

@chatserver @ui name("")
: version 1.00
: package swingx
: package munction
: build
    : facet @headless

//

@chatserver @app name("")
: version 1.00
: package appx
: package munction
: build

    : facet root
        : facet @ui             name("ui")          existing
        : facet @network        name("network")     existing
        : facet @system         name("system")      existing
        : facet @datastream     name("log")         existing
        : facet @datastream     name("status")      existing

    : facet     struct          @orderer            options("QUEUE")
    : facet     struct          @integrator         options("SYSTEM_ALL")
    : facet     struct          @password           options("MANDATORY")

    : require   monitor         @socket             options("LOG_ALL")
    : require   monitor         @onconnect          options("IP_ADDRESS, TIME")
    : require   monitor         @ondisconnect       options("IP_ADDRESS, TIME")

//

@chatserver @system name("")
: version 1.00
: package systemx
    : facet orderer
    : facet integrator
    : facet extender